{"name":"Backbone.Controller","tagline":"Controller for Backbone MV*","body":"Backbone.Controller\r\n===================\r\n\r\n[![Build Status](https://travis-ci.org/artyomtrityak/backbone.controller.png)](https://travis-ci.org/artyomtrityak/backbone.controller)\r\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\r\n\r\nController for Backbone MV*\r\n\r\nKeep controller logic separated, split your routes to controllers.\r\n\r\n## Usage\r\n\r\nUsage examples:\r\n\r\n###Basic\r\n\r\n```js\r\nvar Controller = Backbone.Controller.extend({\r\n  initialize: function() {\r\n    // do init stuff\r\n  },\r\n\r\n  search: function(query, page) {\r\n    // create search model and view\r\n  }\r\n}); \r\n\r\nvar searchController = new Controller();\r\n```\r\n\r\n###Controller supports default Backbone events\r\n\r\n```js\r\nvar Controller = Backbone.Controller.extend({\r\n  initialize: function() {\r\n    this.model = new Backbone.Model();\r\n    this.listenTo(this.model, 'add', this._onAdd);\r\n  },\r\n\r\n  _onAdd: function(model) {\r\n    // show notification view\r\n  }\r\n}); \r\n\r\nvar catsController = new Controller();\r\n```\r\n\r\n###Controller has remove method for cleanup\r\n\r\nRemove method should do correct remove for all controller views and models, stop listening controller events and clear state.\r\n\r\n```js\r\nvar Controller = Backbone.Controller.extend({\r\n  initialize: function() {\r\n    this.model = new Backbone.Model();\r\n    this.listenTo(this.model, 'add', this._onAdd);\r\n  },\r\n\r\n  _onAdd: function(model) {\r\n    // show notification view\r\n  }\r\n}); \r\n\r\nvar catsController = new Controller();\r\n//...\r\ncatsController.remove();\r\ndelete catsController;\r\n```\r\n\r\nAlso remove method is calling automatically when user goes from one controller to another. See routing section for details.\r\n\r\n### Controller supports declarative routes definition.\r\n\r\nIt's little more complex than previous examples but can be used to keep all routes separately\r\nwhich is good idea for any size app.\r\n\r\n\r\n```js\r\nvar CatsController = Backbone.Controller.extend({\r\n  routes: {\r\n    'cats': 'list',\r\n    'cats/:id': 'showCat'\r\n  },\r\n\r\n  initialize: function() {\r\n    // do some init stuff\r\n  },\r\n\r\n  list: function() {\r\n    // show cats list\r\n  },\r\n\r\n  showCat: function(catId) {\r\n    // show cat view\r\n  }\r\n});\r\n\r\nvar DogsController = Backbone.Controller.extend({\r\n  routes: {\r\n    '': 'list',\r\n    'dogs': 'list',\r\n    'dogs/:id': 'showDog'\r\n  },\r\n\r\n  initialize: function() {\r\n    // do some init stuff\r\n  },\r\n\r\n  list: function() {\r\n    // show dogs list\r\n  },\r\n\r\n  showDog: function(catId) {\r\n    // show cat view\r\n  },\r\n\r\n  remove: functin() {\r\n    // cleanup\r\n  }\r\n});\r\n\r\nvar Application = Backbone.Router.extend({\r\n  controllers: {},\r\n\r\n  initialize: function() {\r\n    this.controllers.cats = new CatsController({router: this});\r\n    this.controllers.dogs = new DogsController({router: this});\r\n\r\n    Backbone.history.start();\r\n  }\r\n});\r\n```\r\n\r\nThe main idea - pass `{router: routerInstance}` as controller option.\r\nThis allows to define controller specific routes in separated controllers.\r\n\r\nWhen url changes from `#dogs` / `#dogs/:id` to any route which defined in another controller, remove method is calling automatically.\r\n\r\nThis case controller should clear state, remove controller specific views and models.\r\n\r\n### Controller can automatically add router without creating Backbone.Router instance\r\n\r\n```js\r\nvar CatsController = Backbone.Controller.extend({\r\n  routes: {\r\n    'cats': 'list',\r\n    'cats/:id': 'showCat'\r\n  },\r\n\r\n  initialize: function() {\r\n    // do some init stuff\r\n  },\r\n\r\n  list: function() {\r\n    // show cats list\r\n  },\r\n\r\n  showCat: function(catId) {\r\n    // show cat view\r\n  }\r\n});\r\n\r\nvar DogsController = Backbone.Controller.extend({\r\n  routes: {\r\n    '': 'list',\r\n    'dogs': 'list',\r\n    'dogs/:id': 'showDog'\r\n  },\r\n\r\n  initialize: function() {\r\n    // do some init stuff\r\n  },\r\n\r\n  list: function() {\r\n    // show dogs list\r\n  },\r\n\r\n  showDog: function(catId) {\r\n    // show cat view\r\n  }\r\n});\r\n\r\nvar cats = new CatsController({router: true});\r\nvar dogs = new DogsController({router: true});\r\n```\r\n\r\n### Before / after routing\r\n\r\nController automatically calls `onBeforeRoute` / `onAfterRoute` functions when processing routes.\r\n\r\n```js\r\nvar DogsController = Backbone.Controller.extend({\r\n  routes: {\r\n    '': 'list',\r\n    'dogs': 'list'\r\n  },\r\n\r\n  initialize: function() {\r\n    // do some init stuff\r\n  },\r\n\r\n  onBeforeRoute: function() {\r\n    // called before `#dogs` / `#` routes\r\n    // Set some state variables, create controller layout etc\r\n  },\r\n\r\n  onAfterRoute: function() {\r\n    // called after `#dogs` / `#` routes\r\n  },\r\n\r\n  list: function() {\r\n    // show dogs list\r\n  }\r\n});\r\n\r\nvar cats = new CatsController({router: true});\r\nvar dogs = new DogsController({router: true});\r\n```\r\n\r\n## Dependencies loading\r\n\r\n### Require.js AMD\r\n\r\n```js\r\nrequirejs.config({\r\n  baseUrl: 'static/',\r\n  urlArgs: 'bust=' +  Date.now(),\r\n  paths: {\r\n    jquery: 'assets/js/jquery',\r\n    underscore: 'assets/js/underscore',\r\n    backbone: 'assets/js/backbone',\r\n    controller: 'assets/js/backbone.controller'\r\n  },\r\n\r\n  shim: {\r\n    backbone: {\r\n      deps: ['underscore', 'jquery'],\r\n      exports: 'Backbone'\r\n    },\r\n    controller: {\r\n      deps: ['underscore', 'backbone']\r\n    },\r\n    app: ['controller']\r\n  }\r\n});\r\n```\r\n\r\n### CommonJS\r\n\r\n```js\r\nvar Controller = require('controller');\r\n// or require Backbone, both fine\r\n\r\nvar HomeController = Controller.extend({\r\n  ...\r\n});\r\n```\r\n\r\n### Old style\r\n\r\n```html\r\n<script src=\"assets/js/jquery.js\" />\r\n<script src=\"assets/js/underscore.js\" />\r\n<script src=\"assets/js/backbone.js\" />\r\n<script src=\"assets/js/backbone.controller.js\" />\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}